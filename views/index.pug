extends _base

append head
  style: include index.css

append foot
  script(defer): include index.js
  
block main
  .title
    h1=siteTitle
    p All data sourced from the #[a(href=prciec.href)=prciec.label]
  details.totals(open)
    summary#table-details-label Landlords by party
    .totals-table-wrapper
      table.totals-table(aria-labelledby="table-details-label")
        thead
          th Party
          th(aria-sort="descending") #[span(aria-hidden="true") â–¾]&nbsp;MPs
          th Landlords
          th Percentage
        tbody
          each data, party in Object.fromEntries(Array.from(parties).sort((a, b) => b[1].mps - a[1].mps))
            tr(data-party=party)
              th(scope="row")=party
              td=data.mps
              td=data.landlords
              td=`${(data.landlords / data.mps * 100).toFixed(2)}%`
        tfoot
          th(scope="row") Totals
          td=totalMps
          td=totalLandlords
          td=`${(totalLandlords / totalMps * 100).toFixed(2)}%`
  #root
    .mega-container
      .sorting-container
        label(for="party-select")
          | Party 
          select#party-select.filter-selector
            button: selectedcontent
            each party in ["All", ...Array.from(parties, ([party]) => party).sort()]
              option(value=party)
                div(data-party=party style="display: contents")
                  svg(viewBox="0 0 20 20" width="1em" style="align-self: center")
                    circle(r="10" cx="10" cy="10" fill="var(--party-color)")
                  span=party
        label(for="province-select")
          | Province 
          select#province-select.filter-selector
            each province in ["All", ...[...new Set(mps.map(mp => mp.province))].sort()]
              option(value=province)=province
        label(for="constituency-select")
          | Riding 
          select#constituency-select.filter-selector
            each constituency in ["All", ...mps.map(mp => mp.constituency).sort()]
              option(value=constituency)=constituency
        label(for="only-landlords")
          input#only-landlords(type="checkbox")
          | Only landlords
      #live-region.visually-hidden(aria-live="polite")
      ul.mp-cards-grid
        each mp in mps
          - const mpNameSlug = mp.name.toLowerCase().replaceAll(" ", "_");
          li.mp-card(data-province=mp.province data-party=mp.party data-constituency=mp.constituency data-landlord=JSON.stringify(mp.landlord) style=`view-transition-name: ${mpNameSlug}`)
            img.mp-portrait(src=`/images/mp_images/${mp.image_name}` alt="" loading="lazy")
            .mp-card-content
              h2.mp-card-title
                span(translate="no")=mp.name
                strong(style="font-weight: 500;") #{mp.landlord ? " is" : " is not"} a landlord
              dl.mp-card-details
                dt.visually-hidden Party
                dd=mp.party
                .mp-constituency-and-province
                  dt.visually-hidden Constituency
                  dd=mp.constituency
                  dt.visually-hidden Province
                  dd=mp.province
              a.mp-card-cta(href=`mp/${mpNameSlug}_${mp.province.toLowerCase()}`) Learn more #[span.visually-hidden about #{mp.name}]
