@view-transition {
    navigation: auto;
}

:root {
    scrollbar-gutter: stable;
}

.sorting-container select {
    /* Fallback for field-sizing */
    max-inline-size: 100%;
    field-sizing: content;
}

.no-js .sorting-container {
    padding-block-start: 0 !important;
    label {
        display: none;
    }
}

.sorting-container {
    display: flex;
    flex-wrap: wrap;
    column-gap: 1rem;
    row-gap: 0.5rem;
    justify-content: center;
    align-items: baseline;
    padding-block-start: 1.5rem;
    border-block-start: 2px solid hsl(from CanvasText h s l / 0.1);
}

label:has(select, input) {
    font-weight: 600;
    display: flex;
    align-items: baseline;
    column-gap: 0.25rem;
}

input[type="checkbox"] {
    align-self: center;
    margin: 0;
}

.totals {
    max-inline-size: 30rem;
    margin-inline: auto;
    margin-block-end: 1rem;
}

.totals-table {
    table-layout: fixed;
    inline-size: 100%;
    font-variant-numeric: tabular-nums;

    tr:where([data-party="Bloc Québécois"]) { --party-color: #0088ce; }
    tr:where([data-party="Conservative"]) { --party-color: #002395; }
    tr:where([data-party="Green Party"]) { --party-color: #427a26; }
    tr:where([data-party="Liberal"]) { --party-color: #d71920; }
    tr:where([data-party="NDP"]) { --party-color: #ff5800; }
    tr:where([data-party="Independent"]) { --party-color: #c0c0c0; }

    th:first-of-type {
        text-align: start;
        padding-inline-end: 8px;

        &:is(tbody [scope="row"]) {
            border-inline-start: 4px solid var(--party-color);
            padding-inline-start: 8px;
        }

        &:is(:is(thead, tfoot) th) {
            padding-inline-start: 12px;
        }
    }

    th:nth-of-type(2) { inline-size: 6ch; }
    th:nth-of-type(3) { inline-size: 8ch; }
    th:nth-of-type(4) { inline-size: 9ch; }
    th:not(:first-of-type), td {
        text-align: end;
        padding-inline: 8px;
    }

    thead :is(th) {
        border-block-end: 2px solid hsl(from CanvasText h s l / 0.3);
        inline-size: fit-content;
    }

    tfoot :is(th, td) {
        border-block-start: 2px solid hsl(from CanvasText h s l / 0.3);
    }

    tbody tr:nth-of-type(even) {
        background-color: hsl(from Canvas h s calc(l * 0.9));
    }
}
